// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"

#include "EnemyCharacter.h"
#include "SpecialItem.h"

#include "EnemySpawnerActor.generated.h"


UCLASS(Blueprintable)
class ASSIGNMENT2_API AEnemySpawnerActor : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	AEnemySpawnerActor();

	// Create a SpawnEnemy method
	void SpawnEnemy();

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

public:	
	// Called every frame
	virtual void Tick(float DeltaTime) override;


	// construct a timer handle
	FTimerHandle SpawnTimerHandle;

	// Construct a subclass of AEnemyActor name it ClassToSpawn by TSubclassOf<>()
	UPROPERTY(EditAnywhere)
	TSubclassOf<AEnemyCharacter> ClassToSpawn = nullptr;


	// Construct a subclass of ASpecialItem name it ItemToSpawn by TSubclassOf<>()
	UPROPERTY(EditAnywhere)
	TSubclassOf<ASpecialItem> ItemToSpawn = nullptr;

	// Create a Counter to setting the amount of spawn
	UPROPERTY(EditAnywhere)
	int SpawnLimit;

	// Create a Counter to setting the total amount in the world
	UPROPERTY(EditAnywhere)
	int LifeTimeNumber;

	// create a function to reduce the num of enemy which generated by EnemySpawnerActor
	void CountEnemyEliminated();

private:
	// set a counter
	int EnemyDeathNum = 0;
	int EnemyCounter = 0;

	FScriptDelegate CountEnemyDelegate;

};
